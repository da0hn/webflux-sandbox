version: '3.8'
services:
  product_db:
    image: mongo
    container_name: product_db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - .docker/product_db:/data/db
    ports:
      - '27017:27017'
    networks:
      - microservice_network
    restart: always
  mongo_express:
    image: mongo-express
    container_name: mongo_express
    environment:
      - ME_CONFIG_MONGODB_SERVER=product_db
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_BASICAUTH_USERNAME=user
      - ME_CONFIG_BASICAUTH_PASSWORD=user
    links:
      - product_db
    volumes:
      - .docker/mongo_express:/data/db
    depends_on:
      - product_db
    networks:
      - microservice_network
    ports:
      - '8081:8081'
    restart: always
  user_db:
    container_name: user_db
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_db
    ports:
      - '5433:5432'
    volumes:
      - .docker/init_user_db.sql:/docker-entrypoint-initdb.d/init.sql
      - .docker/user_db:/var/lib/postgresql/data
    restart: always
    networks:
      - microservice_network
  user_service:
    container_name: user_service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - '8092:8092'
    depends_on:
      - user_db
    networks:
      - microservice_network
  product_service:
    container_name: product_service
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - '8091:8091'
    depends_on:
      - product_db
    networks:
      - microservice_network
networks:
  microservice_network:
    driver: bridge
    name: microservice_network

